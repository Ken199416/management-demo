<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.dao.EmailCodeDao">

    <resultMap type="app.entity.EmailCode" id="EmailCodeMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmailCodeMap">
        select id,
               code,
               user_id,
               type,
               status
        from management_paper.email_code
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmailCodeMap">
        select id,
               code,
               user_id,
               type,
               status
        from management_paper.email_code
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EmailCodeMap">
        select
        id, code, user_id, type, status
        from management_paper.email_code
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into management_paper.email_code(code, user_id, type, status)
        values (#{code}, #{userId}, #{type}, #{status})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into management_paper.email_code(code, user_id, type, status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.code}, #{entity.userId}, #{entity.type}, #{entity.status})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into management_paper.email_code(code, user_id, type, status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.code}, #{entity.userId}, #{entity.type}, #{entity.status})
        </foreach>
        on duplicate key update
        code = values(code) , user_id = values(user_id) , type = values(type) , status = values(status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update management_paper.email_code
        <set>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from management_paper.email_code
        where id = #{id}
    </delete>

    <select id="activate" resultType="int">
        select COUNT(*) from management_paper.email_code where user_id = #{userId} and code = #{code} and status = 1
    </select>

    <update id="expiryCode">
        update management_paper.email_code set status = 0 where user_id = #{userId} and code = #{code}
    </update>

</mapper>